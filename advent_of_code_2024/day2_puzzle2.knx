// BUG SOMEWHERE
($sequence
    ($import! (input-for-day-n) (get-module #kommon.knx))
    ($import! (peg/match) (get-module #../knx/peg.knx))
    ($define! numFromBool ($lambda (b) ($if b #1 #0)))
    ($define! all? ($lambda (vals) 
        ($if (empty? vals) 
            #true
            ($and (first vals) (all? (rest vals))))))
    ($define! some? ($lambda (vals) 
        ($if (empty? vals) 
            #false
            ($or (first vals) (some? (rest vals))))))
    ($define! range ($lambda (n) ($if (=? n #0) (list #0) (withTail (range (- n #1)) n))))
    ($define! remove ($lambda (k things) ($if (=? k #0) (rest things) (withHead (first things) (remove (- k #1) (rest things))))))
    ($define! get-deltas ($lambda (row) ($match row
        ((a b . etc) (withHead (- b a) (get-deltas (rest row))))
        ((a . etc) (list)))))
    ($define! is-safe-pure? ($lambda (row)
        ($let ((deltas (get-deltas row)))
            ($or
                (all? (map deltas ($lambda (n) ($and (<? #0 n) (<? n #4)))))
                (all? (map deltas ($lambda (n) ($and (<? #-4 n) (<? n #0)))))))))
    ($define! is-safe? ($lambda (row)
        ($let ((deltas (get-deltas row)))
            ($or
                (is-safe-pure? row)
                (some? (map (range (len deltas)) ($lambda (k) (is-safe-pure? (remove k row)))))))))
    ($letrec (
            (raw-rows (peg/match ($quote // TODO: better PEGs
                (any (capture (sequence 
                    (any (sequence 
                        (some (set 0123456789))
                        (any (space))))
                    (newline)))))
                (input-for-day-n #2)))
            (rows (map raw-rows ($lambda (row) (peg/match ($quote
                (any (sequence
                    (capture (some (set 0123456789)))
                    (any (space))))) row)))))
        (reduce (map (map rows is-safe?) numFromBool) + #0)))
